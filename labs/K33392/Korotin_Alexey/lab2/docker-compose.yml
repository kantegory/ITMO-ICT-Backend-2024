version: '3.10'
services:
  auth-db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./volumes/auth-db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app-db:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./volumes/app-db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  auth-service:
    pull_policy: build
    build:
      context: auth/
      dockerfile: Dockerfile
    environment:
      datasource.host: auth-db
      datasource.port: 5432
      app.host: auth-service
      app.port: 1234
      app.brokerUrl: kafka:9092
    ports:
      - "1234:1234"
    depends_on:
      auth-db:
        condition: service_healthy

  smart-devices-service:
    pull_policy: build
    build:
      context: smart_devices/
      dockerfile: Dockerfile
    environment:
      datasource.host: app-db
      datasource.port: 5432
      app.host: smart-devices-service
      app.port: 12345
      app.brokerUrl: kafka:9092
    ports:
      - "12345:12345"
    depends_on:
      auth-service:
        condition: service_started
      app-db:
        condition: service_healthy

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

