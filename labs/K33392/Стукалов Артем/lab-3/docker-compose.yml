version: '3'

services:
  db:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_pwd
    volumes:
      - /var/postgres:/var/lib/postgresql/data
    expose:
      - 5432
    restart: always

  rabbitmq:
    image: rabbitmq
    expose:
      - 5672

  auth:
    build:
      context: ./
      dockerfile: Dockerfile.auth
    tty: true
    env_file:
      - .env
    ports:
      - 3000:3000
    depends_on:
      - db
    command: sh -c "pnpm turbo db:migrate:deploy && cd api-services/auth && node dist/index.js"
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

  devices:
    build:
      context: ./
      dockerfile: Dockerfile.devices
    tty: true
    env_file:
      - .env
    ports:
      - 3001:3001
    depends_on:
      - db
    command: sh -c "pnpm turbo db:migrate:deploy && cd api-services/devices && node dist/index.js"
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5
